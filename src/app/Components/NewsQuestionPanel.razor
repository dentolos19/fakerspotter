<Image Source="@Question.ImageUrl" Style="display: block; margin-left: auto; margin-right: auto; width: 50%;"/>
<br/>
<Container TextAlignment="TextAlignment.Center">
    <Heading Size="HeadingSize.Is5">@Question.Headline</Heading>
    <Paragraph>@Question.Background</Paragraph>
</Container>
<ListGroup Mode="ListGroupMode.Selectable">
    <ListGroupItem Color="RealOptionColor" Clicked="OnRealPicked">Real News</ListGroupItem>
    <ListGroupItem Color="FakeOptionColor" Clicked="OnFakePicked">Fake News</ListGroupItem>
</ListGroup>

@code
{

    private NewsQuestion _question;

    [Parameter]
    public NewsQuestion Question
    {
        get => _question;
        set
        {
            IsCompleted = false;
            RealOptionColor = Color.Light;
            FakeOptionColor = Color.Light;
            _question = value;
        }
    }

    [Parameter] public EventCallback<bool> OnComplete { get; set; }

    private bool IsCompleted { get; set; }
    private Color RealOptionColor { get; set; }
    private Color FakeOptionColor { get; set; }

    private async void OnRealPicked()
    {
        if (IsCompleted)
            return;
        RealOptionColor = !Question.IsFake ? Color.Success : Color.Danger;
        IsCompleted = true;
        await Task.Delay(1000);
        await OnComplete.InvokeAsync(!Question.IsFake);
    }

    private async void OnFakePicked()
    {
        if (IsCompleted)
            return;
        FakeOptionColor = Question.IsFake ? Color.Success : Color.Danger;
        IsCompleted = true;
        await Task.Delay(1000);
        await OnComplete.InvokeAsync(Question.IsFake);
    }

}